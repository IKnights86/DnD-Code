var iFileName = "Incarnate-Last_of_the_Lacers_Classes [from Alex Tanner, transcribed by IKnights86].js";
RequiredSheetVersion(13);

SourceList.LotL={
	name : "Incarnate: Last of the Lacers",
	abbreviation : "LotL",
	group : "DMs Guild",
	url : "https://www.dmsguild.com/product/191837/Incarnate-The-Last-of-the-Lacers",
	date : "2024/03/21"
};

RequiredSheetVersion("13");
ClassList["airlacer"] = {
	name : "Lacer, Air",
	regExpSearch : /^((?=.*air)(?=.*lacer)|(?=.*airlacer)).*$/i,
	source : ["LotL", 22],
	primaryAbility : "Strength or Dexterity",
	prereqs : "Strength 13 or Dexterity 13",
	die : 8,
	improvements : [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5],
	saves : ["Str", "Dex"],

// EVERYTHING BELOW THIS LINE IS NOT UPDATED TO v13 YET!

	skills : ["\n\n" + toUni("MyClass") + ": Choose two from Acrobatics, Arcana, Athletics, Insight, Intimidation, Medicine, and Survival.", "\n\n" + toUni("MyClass") + ": Choose two from Acrobatics, Arcana, Athletics, Insight, Intimidation, Medicine, and Survival."],

/* SYNTAX CHANGE v12.998 >> old syntax for 'tools' and 'languages' are no longer supported!! */

	armor : [ //required; the 4 entries are for: ["light", "medium", "heavy", "shields"]
		[true, true, false, true], //required; the armor proficiencies if this is the first or only class
		[true, false, false, false] //required; the armor proficiencies if this class is multiclassed with (so not taken at level 1, but later)
	],

	weapons : [
		[true, false, [""]],
		[false, false, [""]]
	],

	equipment : "MyClass starting equipment:\n \u2022 Leather armor -or- scale mail;\n \u2022 A scimitar -or- a quarterstaff -or- a mace -or- a rapier;\n \u2022 A dungeoneer's pack -or- an explorer's pack.\n\nAlternatively, choose 4d4 \xD7 10 gp worth of starting equipment instead of both the class' and the background's starting equipment.",

	subclasses : ["Elemental Arts", []],
	//IMPORTANT: for any subclass you add using the AddSubClass() function, don't list them here! The AddSubClass() function makes its own entry in this array! If you have entries here that don't exist (because you didn't add any ClassSubList entry, or added it using the AddSubClass() function, then the sheet will throw strange errors)!

	attacks : [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],

	abilitySave : 5,

	spellcastingFactor : 2,

	spellcastingKnown : { //Optional; Denotes the amount and type of spells the class has access to

		spells : [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16],

		prepared : false,

	},

/*
	spellcastingList : { //Optional; Only needed if the class doesn't have its own spell list. This object denotes what spells the class has access to. All things in this object constrain the selection of spells that will be available. The contstraints are cumulative.

		class : "wizard", //Required; The name of the class from whose spell list the spells come from. This can be "any" if the spells are not limited by a spell list of just one class. The entry has to match the name of the class in the SpellsList

		school : ["Evoc", "Abjur"], //Optional; An array of abbreviations of spell school names (see SpellsList). These have to be in an array, even if it is just one value. Each entry has to match the name of the spell school in the SpellsList

		level : [0, 4], //Optional; The lower and upper limit of spell levels that the class has access to.

		ritual : false, //Optional; Denotes if only ritual (true) or only non-ritual (false) spells should be included in the list

		spells : ["light", "mending"], //Optional; If a "spells" array is present, all other objects will be ignored and only this list of spells will populate the list of available spells. each entry has to match the name of the spell in the SpellsList

		notspells : ["antipathy/sympathy", "tsunami"], //Optional; Any spells listed in this array will be excluded from the list
	},
*/
	features : {

		"chosen element" : {
			name : "Chosen Element",
			source : ["LotL", 23],
			minlevel : 1,
			description : "\n   " + "Being an airlacer gives me proficiency with blowguns, shanzis, and the acrobatics skill.",
			skills : ["Acrobatics"],
			weapons : [false, false, ["blowgun", "shanzi"]]
		},

		"basic airlacing" : {
			name : "Basic Lacing",
			source : ["LotL", 66],
			minlevel : 1,
			description : "\n   " + "I gain basic airlacing. (see notes)",
			toNotesPage : [{
				name : "Airlacing",
				source : ["LotL", 66],
				popupName : "Basic Airlacing",
				note : [
					"Initiation Time: 1 action",
          				"Range: 30 feet",
          				"Duration: Instantaneous\n",
          				"Anyone who is an Airlacer can initiate the following effects as an action within a 5-foot cube.\n",
          				"You create a harmless sensory effect using air, such as causing leaves to rustle or wind to slam shutters.",
          				"Until the end of your next turn, ranged weapon attacks against you are made with disadvantage.",
          				"You create a small blast of air which moves one unattended object within 30 feet that weighs no more than 5 pounds up to 10 feet in any direction.",
          				"Your movement speed is doubled until the end of your turn.",
          				"The area you can affect increases by 5 feet and the weight of objects you can move increases by 5 pounds when you reach 5th level (10-foot cube, 10 pounds), 11th level (15-foot cube, 15 pounds), and 17th level (20-foot cube, 20 pounds)."
				]
			}]
		},

		"elemental strike" : {
			name : "Elemental Strike",
			source : ["LotL", 24],
			minlevel : 1,
			description : "\n   " + "When I make an attack I can blast my opponent with an elemental strike. (see notes)",
			action : ["bonus action", "Elemental Strike"],
			weaponsAdd : ["Elemental Strike"],
			weapons : [false, false, ["Elemental"]],
			weaponOptions : {
				regExpSearch : /^(?=.*elemental)(?=.*strike).*$/i,
				name : "Elemental Strike",
				source : ["LotL", 24],
     				list : "ranged",
      				ability : 1,
      				type : "Elemental",
				range : "20/60 ft",
				damage : [1, 6, "bludgeoning"],
				description : "Finesse, No disadv. if target is prone in range or in melee",
      				abilitytodamage : true
			},
			toNotesPage : [{
				name : "Elemental Strike",
				source : ["LotL", 24],
				popupName : "Elemental Strike properties",
				note : [
					"You roll a d6 for the damage of your elemental strike. Your elemental strike deals bludgeoning damage.",
					"Your elemental strike is a ranged weapon with a normal range of 20 feet, or a long range of 60 feet. When attacking a target beyond normal range, you have disadvantage on the attack roll. You can't attack a target beyond the strike's long range.",
					"Despite being a ranged weapon, you do not have	disadvantage on attack rolls with your elemental strike when a hostile creature is within 5 feet of you, nor when attacking a creature that is prone within 20 feet of you.",
					"You can use Strength instead of Dexterity for the attack and damage rolls of your elemental strike.",
					"When you reduce a creature to 0 hit points, you can choose to avoid killing them with your elemental strike, leaving them unconscious.",
					"When you take the Attack action with a weapon with whichyou have proficiency on your turn (including your elemental strike), you can make one elemental strike as a bonus action."
				]
			}]
		},

		"ki" : {
			name : "Ki",
			source : ["LotL", 24],
			minlevel : 1,
			description : "\n   " + "I can spend ki points to fuel special actions and lacing forms (see third page)" + "\n   " + "I need to meditate for at least 30 min of a short rest for that short rest to restore ki",
			limfeaname : "Ki Points",
			usages : [1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15, 16],
			recovery : "short rest",
			"deflection" : {
				name : "Deflection",
				extraname : "Ki Feature",
				source : ["LotL", 24],
				description : " [1 ki point]" + "\n   " + "As a reaction, I can reduce damage done to me from an elemental strike, form attack, or spell attack.",
				action : ["reaction", ""],
				additional : levels.map(function (n) {
					return n < 1 ? "" : "1d10 + " + n + " + Wisdom modifier";
				})
			},
			"power blow" : {
				name : "Power Blow",
				extraname : "Ki Feature",
				source : ["LotL", 24],
				description : " [1 ki point]" + "\n   " + "When I hit an enemy with elemental strike ",
				action : ["bonus action", ""]
			},
			"step of the wind" : {
				name : "Step of the Wind",
				extraname : "Ki Feature",
				source : [["SRD", 27], ["P", 78]],
				description : " [1 ki point]" + "\n   " + "As a bonus action, I can either Dash or Disengage; My jump distance doubles when I do so",
				action : ["bonus action", ""]
			},
			autoSelectExtrachoices : [{
				extrachoice : "flurry of blows"
			}, {
				extrachoice : "patient defense"
			}, {
				extrachoice : "step of the wind"
			}]
		},

		"action surge" : {
			name : "Action Surge",
			source : ["P", 72],
			minlevel : 2,
			description : "\n   " + "I can take one additional action on my turn on top of my normally allowed actions",
			usages : [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], //example of usages varying per level
			recovery : "short rest",

			armor : [false, false, true, false], //optional; the 4 entries are for proficiency in: ["light", "medium", "heavy", "shields"]. Be sure to always add all four statements of true/false!

			weapons : [true, false, ["hand crossbow"]], //optional; the 3 entries are for: ["simple", "martial", "other"]. Be sure to always add both statements of true/false!

			addMod : { type : "skill", field : "Init", mod : "Int", text : "I can add my Intelligence modifier to initiative rolls." }, //optional; This is an object, or an array of similar objects, for adding a modifier to a modifier field. Using this will make it so that the modifier is added to any value that is already there. // The 'mod' attribute can be any combination of numbers, mathematical operators, and three-letter ability score abbreviations // The 'type' attribute can be "skill" or "save", but can also be left empty "" // The 'field' attribute depends on the type, for "skill" it can be the name of a skill, or "Init" for initiative, or "All" for the all skills modifier; for "save" it can be the three-letter abbreviation of an ability score, or "All" for the all saves modifier. // If the 'type' attribute is left empty, the 'field' attribute has to be the exact name of the field the modifier has to be added to // The 'text' attribute is an explanation of why the modifier was added //NOTE: for modifiers to attacks, use calcChanges

			addarmor : "Stone's Durability", //optional; a string of the name of the armour that is literally put in the Armor Description field when the class feature is applicable, and removed if not
		},

		"subclassfeature3" : { //You need at least one entry named "subclassfeatureX". It signals the sheet to ask the user for which subclass he would like to have. The level of this feature should match the level the class needs to select a subclass. Once a subclass is selected, any feature with "subclassfeature" in the object name in the class entry will be ignored.
			name : "Martial Archetype",
			source : ["P", 72],
			minlevel : 3,
			description : "\n   " + "Choose a Martial Archetype you strive to emulate and put it in the \"Class\" field" + "\n   " + "Choose either Champion, Battle Master, Eldritch Knight, or Purple Dragon Knight",
		},

		"subclassfeature3.1" : {
			name : "", //any feature who's name is empty like this one is, will be ignored. Since v12.5 of the sheet, an entry like this serves no function
			minlevel : 3,
		},

		"natural antivenom" : {
			name : "Natural Antivenom",
			source : ["UA:MC", 7],
			minlevel : 9,
			description : desc([
				"I have advantage on saves vs. poison and resistance to poison damage",
				"When I use a poultice, in addition to healing, I cure one poison effect on the creature",
				"I gain proficiency with Constitution saving throws"
			]),

			savetxt : { // Optional; this attribute defines entries to add to the field for "Saving Throw Advantages / Disadvantages"

				text : ["Dex save vs. area effects: fail \u2015 half dmg, success \u2015 no dmg", "Magic can't put me to sleep"], // Optional; this is an array of strings, and each of those strings is added to the field exactly as presented here

				immune : ["poison", "disease"], // Optional; this is an array of strings that the character is immune to. This is put in the field after the text "Immune to ", so in this example it would result in "Immune to poison and disease"

				adv_vs : ["traps", "charmed"] // Optional; this is an array of things that the character has advantage on saves against. This is put in the field after the text "Adv. on saves vs. ", so in this example it would result in "Adv. on saves vs. traps and charmed"
			},

			dmgres : ["Poison"], //optional; an array of damage types that the class gets resistance against. // If the resistance has a condition attached to it, like only being against nonmagical attacks, substitute the entry in the array with an array of 2: [the damage type, the damage type with the condition]. // For example: [["Bludgeoning", "Bludg. (nonmagical)"], ["Piercing", "Pierc. (nonmagical)"], ["Slashing", "Slash. (nonmagical)"]]

			saves : ["Con"], //optional; an array of the ability scores with which the class feature grants proficiency in saving throws

			toolProfs : [["Musical instrument", 3], ["Thieves' tools", "Dex"]], // optional; this is an array with the tool proficiencies gained. Each entry can be its own array of 2 entries. The first entry is the name of the tool and the second entry is either 1) a number if the tool is yet to be chosen, or 2) the 3-letter ability score abbreviation if the tool is to be listed in the skill section and have a bonus calculated

			languageProfs : [1, "Elvish"], // optional; this is an array of the language proficiencies gained. An entry can either be 1) a string that represents the language learned or 2) a number which is the number of language gained that can be chosen by the player

			speed : { //required; This sets a value for one or more speed modes, and/or a value to be added to a specific speed mode or to all speed modes // the attributes of this object can be "walk", "burrow", "climb", "fly", "swim", and "allModes"

				// all of the following attributes are optional and you can add more ("burrow" isn't part of this example!)

				walk : { spd : 30, enc : 20 }, // the objects "walk", "burrow", "climb", "fly", "swim" are all the same, they are an object with two attributes, 'spd' for the speed in feet, and 'enc' for the encumbered speed in feet.

				climb : { spd : "+50", enc : 0 }, // instead of numbers, you can also have modifiers. Modifiers are a string, starting with a mathematical operator, followed by a number (e.g. "-10", "+20"). // a value that is zero is ignored

				fly : { spd : "walk", enc : 0 }, // instead of a number/modifier, you can also set the attribute to "walk". This makes the speed mode assume the walking speed // Using an underscore as the first character means the value is only added if the value would be non-zero

				swim : { spd : "fixed 60", enc : "fixed 60" }, // if you include the word "fixed" together with a number, the movement mode will be that number, without any modifiers from other sources (like the Monk's speed bonus). However, if another entry that isn't 'fixed' does end up with a higher total while including any modifiers, that speed is used instead

				allModes : "+10" // the 'allModes' attribute can only consist of a modifier. This modifier is applied to all speed modes, both normal and encumbered. It is only applied if the speed mode exists, it won't give the character a burrow speed if it would otherwise have none, for example
			},
		},
	}
}


/* CHANGES SINCE V12.999:
	1. 'armor' attribute has been replaced with 'armorProfs', but is otherwise identical.
	2. 'weapons' attribute has been replaced with 'weaponProfs', but is otherwise identical.
	3. 'primaryAbility' should no longer have the class' name in it, nor a line break at the start, a bullet point, or a semicolon at the end.
	4. 'prereqs' should no longer have the class' name in it, nor a line break at the start, a bullet point, or a semicolon at the end.
*/
